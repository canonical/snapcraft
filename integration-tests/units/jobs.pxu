id: snapcraft/normal/list-plugins
command:
    OUTPUT=$(${SNAPCRAFT} list-plugins)
    test "$OUTPUT" = "$(echo -e "ant\nautotools\ncatkin\ncmake\ncopy\ngo\njdk\nmake\nmaven\nnil\nnodejs\npython2\npython3\nqml\nroscore\nscons\ntar-content\n")"
flags: simple has-leftovers

id: snapcraft/normal/no-yaml
command:
    set -x
    OUTPUT=$(${SNAPCRAFT} pull 2>&1)
    test $? = 1 || exit 1
    echo $OUTPUT | grep "Could not find snapcraft\.yaml\."
flags: simple has-leftovers

id: snapcraft/normal/no-yaml-run
command:
    set -x
    OUTPUT=$(${SNAPCRAFT} pull 2>&1)
    test $? = 1 || exit 1
    echo $OUTPUT | grep "Could not find snapcraft\.yaml\."
flags: simple has-leftovers

id: snapcraft/normal/assemble-meta
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/assemble .
    ${SNAPCRAFT} snap
    test -e "assemble_1.0_$(dpkg-architecture -qDEB_BUILD_ARCH).snap"
    sed -i "s/@MULTIARCH@/$(dpkg-architecture -qDEB_BUILD_MULTIARCH)/g" binary1.after
    diff -u binary1.after snap/binary1.wrapper
    export SNAP_APP_PATH=`pwd`/snap
    test "$(./snap/service-start.wrapper)" = "service-start"
    test "$(./snap/service-stop.wrapper)" = "service-stop"
    test "$(./snap/binary1.wrapper)" = "binary1"
    test "$(./snap/subdir/binary2.wrapper)" = "binary2"
    if ./snap/bin/not-wrapped; then
        exit 1
    fi
    if [ -e ./snap/bin/not-wrapped.wrapper ]; then
        exit 1
    fi
flags: simple has-leftovers

id: snapcraft/normal/assemble-meta-with-policy
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/framework-policy .
    ${SNAPCRAFT} snap
    test -e ./snap/meta/framework-policy/a
    test -e ./snap/meta/framework-policy/b
    test -e ./snap/one
    test ! -e ./snap/dir
flags: simple has-leftovers

id: snapcraft/normal/assemble-inexistent-build-package
command:
    set -x
    cp -rT $PLAINBOX_PROVIDER_DATA/assemble .
    echo "build-packages:" >> snapcraft.yaml
    echo "  - inexistent-package" >> snapcraft.yaml
    OUTPUT=$(${SNAPCRAFT} snap 2>&1)
    echo "$OUTPUT" | grep 'Could not find all the "build-packages" required in snapcraft.yaml'
flags: simple has-leftovers

id: snapcraft/normal/local-source
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/local-source .
    ${SNAPCRAFT} build
    test -e parts/make-project/build/stamp-all
    ${SNAPCRAFT} stage
    test -e parts/make-project/build/stamp-install
flags: simple has-leftovers

id: snapcraft/normal/local-plugin
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/local-plugin .
    ${SNAPCRAFT} stage
    test -e stage/build-stamp
flags: simple has-leftovers

id: snapcraft/normal/simple-nil
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/simple-nil .
    ${SNAPCRAFT} snap
    # only should be meta data dir in snap
    test "$(ls -A snap)" == "meta"
flags: simple has-leftovers

id: snapcraft/normal/simple-tar
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/simple-tar .
    ${SNAPCRAFT} stage
    test -e stage/flat
    test -e stage/flatdir/flat2
    test -e stage/onedeep
    test -e stage/onedeepdir/onedeep2
    test -e stage/oneflat
    test -e stage/dir-simple
    test -e stage/top-simple
    test -e stage/notop
    test -e stage/notopdir
    test -e stage/parent
    test -e stage/slash
    test -e stage/readonly_file
    test "$(./stage/bin/test)" = "tarproject"
    # Regression test for https://bugs.launchpad.net/snapcraft/+bug/1500728
    ${SNAPCRAFT} pull
flags: simple has-leftovers

id: snapcraft/normal/simple-make
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/simple-make .
    ${SNAPCRAFT} stage
    test "$(./stage/bin/test)" = "Hello world"
flags: simple has-leftovers

id: snapcraft/normal/simple-maven
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/simple-maven .
    ${SNAPCRAFT} build
flags: simple has-leftovers

id: snapcraft/normal/simple-scons
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/simple-scons .
    ${SNAPCRAFT} stage
    test "$(./stage/opt/bin/main)" = "Hello world"
flags: simple has-leftovers

id: snapcraft/normal/simple-make-filesets
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/simple-make-filesets .
    ${SNAPCRAFT} snap
    test -d ./stage/new/dir1
    test -d ./stage/new/dir2
    grep -q 'file1' ./stage/share/file1
    grep -q 'file2' ./stage/share/file2
    grep -q 'file1' ./stage/new/dir2/file1
    test ! -d ./snap/new/dir1
    test -d ./snap/new/dir2
    grep -q 'file1' ./snap/share/file1
    grep -q 'file2' ./snap/share/file2
    grep -q 'file1' ./snap/new/dir2/file1
flags: simple has-leftovers

id: snapcraft/normal/simple-make-clean
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/simple-make .
    ${SNAPCRAFT} snap
    test "$(./stage/bin/test)" = "Hello world"
    test -d ./stage
    test -d ./parts
    test -d ./snap
    ${SNAPCRAFT} clean
    test ! -d ./stage
    test ! -d ./parts
    test ! -d ./snap
    # Clean a second time doesn't fail.
    # Regression test for https://bugs.launchpad.net/snapcraft/+bug/1497371
    ${SNAPCRAFT} clean
flags: simple has-leftovers

id: snapcraft/normal/simple-go
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/simple-go .
    ${SNAPCRAFT} stage
    test "$(./stage/bin/$(basename $(pwd)))" = "Hello snapcrafter"
flags: simple has-leftovers

id: snapcraft/normal/simple-cmake
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/simple-cmake .
    ${SNAPCRAFT} stage
    test "$(./stage/bin/simple-cmake)" = "It's a CMake world"
flags: simple has-leftovers

id: snapcraft/normal/simple-copy
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/simple-copy .
    ${SNAPCRAFT} stage
    test "$(cat ./stage/dst)" = "I got copied"
    test "$(cat ./stage/dstdir/srcdirfile.txt)" = "A file in the source directory"
flags: simple has-leftovers

id: snapcraft/normal/conflicts
command:
    set -x
    cp -rT $PLAINBOX_PROVIDER_DATA/conflicts .
    OUTPUT=$(${SNAPCRAFT} stage 2>&1)
    test $? = 1 || exit 1
    echo $OUTPUT | grep "Parts 'p1' and 'p2' have the following file paths in common which have different contents: bin/test"
flags: simple has-leftovers

id: snapcraft/normal/dependencies
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/dependencies .
    ${SNAPCRAFT} stage
    test -x stage/bin/p3
flags: simple has-leftovers

id: snapcraft/normal/dependencies-circular
command:
    set -x
    cp -rT $PLAINBOX_PROVIDER_DATA/dependencies .
    sed -i "s/p1:/p1:\n    after: [p3]/" snapcraft.yaml
    OUTPUT=$(${SNAPCRAFT} pull 2>&1)
    test $? = 1 || exit 1
    echo $OUTPUT | grep -i "circular dependency"
flags: simple has-leftovers

id: snapcraft/normal/dependencies-fail
command:
    set -x
    cp -rT $PLAINBOX_PROVIDER_DATA/dependencies .
    sed -i '/after/d' snapcraft.yaml
    ${SNAPCRAFT} build
    test $? = 1 || exit 1
flags: simple has-leftovers

id: snapcraft/normal/bzr-head
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/bzr-head .
    bzr init .
    bzr whoami --branch "Example Dev <dev@example.com>"
    bzr commit -m "1" --unchanged
    bzr commit -m "2" --unchanged
    ${SNAPCRAFT} pull # test initial branch
    test "$(bzr revno -r -1 parts/bzr/src)" = "2"
    ${SNAPCRAFT} pull # test pull doesn't fail
    test "$(bzr revno -r -1 parts/bzr/src)" = "2"
flags: simple has-leftovers

id: snapcraft/normal/bzr-tag
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/bzr-tag .
    bzr init .
    bzr whoami --branch "Example Dev <dev@example.com>"
    bzr commit -m "1" --unchanged
    bzr commit -m "2" --unchanged
    bzr tag -r 1 initial
    ${SNAPCRAFT} pull # test initial branch
    test "$(bzr revno -r -1 parts/bzr/src)" = "1"
    ${SNAPCRAFT} pull # test pull doesn't fail
    test "$(bzr revno -r -1 parts/bzr/src)" = "1"
flags: simple has-leftovers

id: snapcraft/normal/git-head
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/git-head .
    git init .
    git config --local user.name "Example Dev"
    git config --local user.email dev@example.com
    git commit -m "1" --allow-empty
    git commit -m "2" --allow-empty
    ${SNAPCRAFT} pull
    test "$(git -C parts/git/src log -1 --oneline | cut -d' ' -f2)" = "2"
    ${SNAPCRAFT} pull
    test "$(git -C parts/git/src log -1 --oneline | cut -d' ' -f2)" = "2"
flags: simple has-leftovers

id: snapcraft/normal/git-tag
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/git-tag .
    git init .
    git config --local user.name "Example Dev"
    git config --local user.email dev@example.com
    git commit -m "1" --allow-empty
    git commit -m "2" --allow-empty
    git tag initial HEAD@{1}
    ${SNAPCRAFT} pull
    test "$(git -C parts/git/src log -1 --oneline | cut -d' ' -f2)" = "1"
    ${SNAPCRAFT} pull
    test "$(git -C parts/git/src log -1 --oneline | cut -d' ' -f2)" = "1"
flags: simple has-leftovers

id: snapcraft/normal/git-branch
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/git-branch .
    git init .
    git config --local user.name "Example Dev"
    git config --local user.email dev@example.com
    git commit -m "1" --allow-empty
    git commit -m "2" --allow-empty
    git branch second HEAD@{1}
    git checkout second
    git commit -m "3" --allow-empty
    git checkout master
    ${SNAPCRAFT} pull
    test "$(git -C parts/git/src log -2 --oneline | cut -d' ' -f2 | tr '\n' ' ')" = "3 1 "
    ${SNAPCRAFT} pull
    test "$(git -C parts/git/src log -2 --oneline | cut -d' ' -f2 | tr '\n' ' ')" = "3 1 "
flags: simple has-leftovers

id: snapcraft/normal/hg-head
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/hg-head .
    hg init .
    touch 1
    hg commit -m "1" --user "Example Dev" -A 1
    touch 2
    hg commit -m "2" --user "Example Dev" -A 2
    ${SNAPCRAFT} pull
    test "$(hg log --cwd parts/mercurial/src --template "{desc}" -r -1)" = "2"
    ${SNAPCRAFT} pull
    test "$(hg log --cwd parts/mercurial/src --template "{desc}" -r -1)" = "2"
flags: simple has-leftovers

id: snapcraft/normal/hg-tag
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/hg-tag .
    hg init .
    touch 1
    hg commit -m "1" --user "Example Dev" -A 1
    hg tag initial --user "Example Dev"
    touch 2
    hg commit -m "2" --user "Example Dev" -A 2
    ${SNAPCRAFT} pull
    test "$(ls -1 parts/mercurial/src/ | wc -l )" = "1"
    ${SNAPCRAFT} pull
    test "$(ls -1 parts/mercurial/src/ | wc -l )" = "1"
flags: simple has-leftovers

id: snapcraft/normal/hg-branch
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/hg-branch .
    hg init .
    hg branch second
    touch second
    hg commit -m "second" --user "Example Dev" -A second
    hg branch default
    touch default
    hg commit -m "default" --user "Example Dev" -A default
    ${SNAPCRAFT} pull
    test -e parts/mercurial/src/second
    ${SNAPCRAFT} pull
    test -e parts/mercurial/src/second
flags: simple has-leftovers

id: snapcraft/normal/circle-tree
command:
    set -ex
    cp -rTL $PLAINBOX_PROVIDER_DATA/simple-circle/tree .
    ${SNAPCRAFT} pull
flags: simple has-leftovers

id: snapcraft/normal/circle-dependencies
command:
    set -ex
    cp -rTL $PLAINBOX_PROVIDER_DATA/simple-circle/circle .
    ! ${SNAPCRAFT} pull
flags: simple has-leftovers

id: snapcraft/normal/complete-part-with-wiki
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/wiki .
    ${SNAPCRAFT} pull
flags: simple has-leftovers

id: snapcraft/normal/nil-plugin-pkgfilter
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/nil-plugin-pkgfilter .
    ${SNAPCRAFT} stage
    test -e stage/usr/bin/nmcli
    ${SNAPCRAFT} snap
    test -e snap/usr/bin/nmcli
    test ! -e snap/usr/bin/nmtui
flags: simple has-leftovers

id: snapcraft/normal/pypi-config
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/pypi-config .
    ${SNAPCRAFT} snap
    test -f ./stage/usr/bin/config.py
    test -f ./stage/usr/bin/python3
    test -f ./snap/usr/bin/config.py
    test -f ./snap/usr/bin/python3
    test -f ./snap/meta/hooks/config
    grep -q 'exec "$SNAP_APP_PATH/usr/bin/python3" "$SNAP_APP_PATH/usr/bin/config.py" $*' ./snap/meta/hooks/config
flags: simple has-leftovers

id: snapcraft/normal/pip-requirements-file
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/pip-requirements-file .
    ${SNAPCRAFT} pull
    test -f parts/python2/install/usr/lib/python2.7/argparse.py
    test -f parts/python3/install/usr/lib/python3*/argparse.py
flags: simple has-leftovers

id: snapcraft/normal/pip-requirements-list
command:
    set -ex
    cp -rT $PLAINBOX_PROVIDER_DATA/pip-requirements-list .
    ${SNAPCRAFT} pull
    test -f parts/python2/install/usr/lib/python2.7/argparse.py
    test -d parts/python2/install/usr/lib/python2.7/dist-packages/jsonschema
    test -f parts/python3/install/usr/lib/python3*/argparse.py
    test -d parts/python3/install/usr/lib/python3/dist-packages/jsonschema
flags: simple has-leftovers
