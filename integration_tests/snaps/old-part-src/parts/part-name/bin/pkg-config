#!/usr/bin/env python3

import os
import sys
from subprocess import check_call, CalledProcessError

real_env = os.environ.copy()


def run_pkg_config(args, env):
    check_call(['/usr/bin/pkg-config'] + args, env=env)


def get_pkg_env_for(basedir):
    current_env = real_env.copy()
    env = {}
    env['PKG_CONFIG_PATH'] = ':'.join([
        '{basedir}/lib/pkgconfig',
        '{basedir}/lib/x86_64-linux-gnu/pkgconfig',
        '{basedir}/usr/lib/pkgconfig',
        '{basedir}/usr/lib/x86_64-linux-gnu/pkgconfig',
        '{basedir}/usr/share/pkgconfig',
        '{basedir}/usr/local/lib/pkgconfig',
        '{basedir}/usr/local/lib/x86_64-linux-gnu/pkgconfig',
        '{basedir}/usr/local/share/pkgconfig']).format(basedir=basedir)
    env['PKG_CONFIG_SYSROOT_DIR'] = basedir
    env['PKG_CONFIG_LIBDIR'] = ''

    current_env.update(env)

    return current_env


def modules_exist(modules, env):
    try:
        check_call(['/usr/bin/pkg-config', '--exists'] + modules, env=env)
        return True
    except CalledProcessError:
        return False


def main():
    args = sys.argv[1:]
    modules = list(filter(lambda x: not x.startswith('-'), args))

    env = get_pkg_env_for('/home/ubuntu/src/snapcraft/integration_tests/snaps/old-part-src/parts/part-name/install')
    if modules_exist(modules, env):
        run_pkg_config(args, env)
        return

    env = get_pkg_env_for('/home/ubuntu/src/snapcraft/integration_tests/snaps/old-part-src/stage')
    if modules_exist(modules, env):
        run_pkg_config(args, env)
        return

    run_pkg_config(args, env=real_env)


if __name__ == '__main__':
    main()
