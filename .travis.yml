language: bash
dist: bionic

env:
  global:
    - LC_ALL: "C.UTF-8"
    - LANG: "C.UTF-8"
    - PATH: "/snap/bin:$PATH"

jobs:
  include:
    - stage: snap
      name: snap
      workspaces:
        create:
          name: snaps
          paths:
            - "snapcraft-pr$TRAVIS_PULL_REQUEST.snap"
      addons:
        snaps:
          - name: snapcraft
            channel: stable
            classic: true
          - name: transfer
          - name: http
        apt:
          packages:
            - libapt-pkg-dev
            - libffi-dev
            - libnacl-dev
            - libsodium-dev
            - libssl-dev
            - libyaml-dev
            - python3.6-dev
      script:
        - snapcraft snap --destructive-mode --output "snapcraft-pr$TRAVIS_PULL_REQUEST.snap"
        - sudo snap install "snapcraft-pr$TRAVIS_PULL_REQUEST.snap" --dangerous --classic
        - snapcraft clean --destructive-mode
        - snapcraft snap --destructive-mode --output "snapcraft-pr$TRAVIS_PULL_REQUEST.snap"
      after_success:
        - timeout 180 /snap/bin/transfer snapcraft-pr$TRAVIS_PULL_REQUEST.snap
      after_failure:
        - sudo journalctl -u snapd
        - /snap/bin/http https://api.snapcraft.io/v2/snaps/info/core architecture==amd64 Snap-Device-Series:16

    - stage: integration
      name: store
      workspaces:
        use: snaps
      if: head_repo = "snapcore/snapcraft"
      script:
        - ./runtests.sh spread "google:ubuntu-18.04-64:tests/spread/general/store"

    - stage: docker
      env:
        RISK: "stable"
      script:
        - cd docker
        - docker build --no-cache -f ${RISK}.Dockerfile --tag snapcore/snapcraft:${RISK} .
        - docker run snapcore/snapcraft:${RISK} snapcraft --version
    - env:
        RISK: "edge"
      script:
        - cd docker
        - docker build --no-cache -f ${RISK}.Dockerfile --tag snapcore/snapcraft:${RISK} .
        - docker run snapcore/snapcraft:${RISK} snapcraft --version
    - env:
        RISK: "beta"
      script:
        - cd docker
        - docker build --no-cache -f ${RISK}.Dockerfile --tag snapcore/snapcraft:${RISK} .
        - docker run snapcore/snapcraft:${RISK} snapcraft --version
    - env:
        RISK: "candidate"
      script:
        - cd docker
        - docker build --no-cache -f ${RISK}.Dockerfile --tag snapcore/snapcraft:${RISK} .
        - docker run snapcore/snapcraft:${RISK} snapcraft --version
