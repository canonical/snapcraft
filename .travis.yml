language: bash

services: [docker]

env:
  global:
    # SPREAD_GOOGLE_KEY
    - secure: "uWKJdJlHc8tg+98jGpcc/FvsssEbw2FARqtgO0smBp5x8JWCmAt5fAVPB8qRbbirdHS5Yjpk8SSSa3vWVizYeTIOV+Vo3w8/1oqymPnMEEMtcLkyGZP+fNMDgNnX+icOU/bmh8werhOn9+qiZfKmFuXgpjrXzYoWzrhn55EuDN68Yhe6gB1zznHihDtSKjwQrbZFlgNnTh13Wk9lY8y2XYsWZZVfQ25dP4PaQQv647nBhcWPvrB0N/vMmDS/twvUBcbbEjRg5yKtsqzuT2lEqdIpwosp3/gZjWAWK0FjjmnzRcSHbugtaxWHmghHDLHSpP4GF7bzYL01tklFWDSW9DDvVfZ3HgiN058LL1jsk+VjcMCgu7csUWUj2kib3/TjKQy32R1vALpgDOrLHutdVDXoED33qxcyAYLODNRwW9o+QQM2HoZD4PKVDcKW4WOvAKp7Z1NK+ag26WdA/bM7ZgAll40dY9yPtgg0fdMM9N1X9e4v2TJmjnSLXF8v0jXIwp3VL01c/RpsmD7ubTUp0ixSaiKK0cCvxdflsDSUGojckeA4OsGOf9X+anqxmJsiY7vW/TKULMgToKEYDIPB0EfJ0Tf8P/ve4veEZSnhFinrDk46jwSP2m4kpR2FHAMtjCwqWEXZWouIJOOclAk4IqUWGT88Iomdz/LFbQa2rdo="

matrix:
  include:
    - os: osx
    - os: linux
      sudo: required
      dist: trusty

cache:
  directories:
    - $TRAVIS_BUILD_DIR/snaps-cache

jobs:
  include:
    # Tests, only when not triggered by the daily cron.
    - stage: static
      if: type != cron
      script:
        - export PATH="/snap/bin:$PATH"
        - sudo apt update
        - sudo apt install -y python3.5-dev snapd shellcheck
        # workaround for "cannot locate the core snap: No such file or directory"
        - sudo snap install core
        - sudo snap install black --devmode --edge
        - sudo update-alternatives --install /usr/bin/python3 python3.5 /usr/bin/python3.5 0
        - curl https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py && python3 /tmp/get-pip.py --user
        - pip3 install --user -r requirements-devel.txt
        - ./runtests.sh static

    - stage: unit
      if: type != cron
      script:
        - sudo apt update
        - sudo apt install -y python3.5-dev git bzr subversion mercurial rpm2cpio p7zip-full libnacl-dev libssl-dev libsodium-dev libffi-dev libapt-pkg-dev squashfs-tools xdelta3
        - sudo update-alternatives --install /usr/bin/python3 python3.5 /usr/bin/python3.5 0
        - curl https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py && python3 /tmp/get-pip.py --user
        - pip3 install --user -r requirements-devel.txt -r requirements.txt codecov coverage
        - ./runtests.sh tests/unit
        - coverage xml
        - codecov --token="$CODECOV_TOKEN"
    - if: type != cron
      script:
        - sudo apt update
        - sudo apt install -y python3.5-dev git bzr subversion mercurial rpm2cpio p7zip-full libnacl-dev libssl-dev libsodium-dev libffi-dev libapt-pkg-dev squashfs-tools xdelta3
        - sudo update-alternatives --install /usr/bin/python3 python3.5 /usr/bin/python3.5 0
        - curl https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py && python3 /tmp/get-pip.py --user
        - pip3 install --user -r requirements-devel.txt -r requirements.txt
        - SNAPCRAFT_TEST_MOCK_MACHINE=armv7l ./runtests.sh tests/unit
    - if: type != cron
      script:
        - sudo apt update
        - sudo apt install -y git python3.5-dev bzr subversion mercurial rpm2cpio p7zip-full libnacl-dev libssl-dev libsodium-dev libffi-dev libapt-pkg-dev squashfs-tools xdelta3
        - sudo update-alternatives --install /usr/bin/python3 python3.5 /usr/bin/python3.5 0
        - curl https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py && python3 /tmp/get-pip.py --user
        - pip3 install --user -r requirements-devel.txt -r requirements.txt
        - SNAPCRAFT_TEST_MOCK_MACHINE=aarch64 ./runtests.sh tests/unit

    - stage: osx-integration-store
      if: type != cron
      os: osx
      script:
      - brew upgrade python
      # readlink -f doesn't work on osx.
      - brew upgrade coreutils || brew install coreutils
      - python3 ./tools/brew_install_from_source.py
      - python3 -m pip install -r requirements.txt
      - python3 -m pip install -r requirements-devel.txt
      - SNAPCRAFT_FROM_BREW=1 ./runtests.sh tests.integration.store.test_store_login_logout use-run

    - stage: snap
      if: type != cron
      script:
      - sudo snap install lxd
      - sudo snap install snapcraft --candidate --classic
      - export PATH=/snap/bin:$PATH
      - sudo lxd init --auto
      - snapcraft cleanbuild
      - mkdir -p "$TRAVIS_BUILD_DIR/snaps-cache"
      - cp "snapcraft_*.snap" "snapcraft-pr$TRAVIS_PULL_REQUEST.snap"
      - sudo snap install transfer
      - timeout 180 transfer snapcraft/snapcraft-pr$TRAVIS_PULL_REQUEST.snap || true

    - stage: integration
      if: type != cron
      script: sudo ./tools/travis/run_tests.sh tests/integration/general
    - if: type != cron
      script: LXD_IMAGE="ubuntu:bionic" sudo ./tools/travis/run_tests.sh tests/integration/general
    - if: type != cron
      script: sudo ./tools/travis/run_tests.sh tests/integration/lifecycle
    - if: type != cron
      script: sudo ./tools/travis/run_tests.sh tests/integration/sources
    - if: type != cron
      script:
      - "travis_wait 30 sleep 1800 &"
      - sudo ./tools/travis/run_tests.sh tests/integration/plugins
    - if: type != cron
      script:
      - "travis_wait 30 sleep 1800 &"
      - sudo ./tools/travis/run_tests.sh tests.integration.plugins_nodejs
    - if: type != cron
      script:
      - "travis_wait 30 sleep 1800 &"
      - sudo ./tools/travis/run_tests.sh tests.integration.plugins_java
    - if: type != cron
      script: sudo ./tools/travis/run_tests.sh tests.integration.plugins_python
    - if: type != cron
      script: LXD_IMAGE="ubuntu-daily:bionic" sudo ./tools/travis/run_tests.sh tests.integration.plugins_python
    - if: type != cron
      script: sudo ./tools/travis/run_tests.sh tests/integration/store
    - if: type != cron
      script:
      - "travis_wait 20 sleep 1200 &"
      - sudo ./tools/travis/run_tests.sh tests/integration/snapd
    # CLA check, only in pull requests, not coming from the bot.
    - if: type = pull_request AND sender != snappy-m-o
      script:
        - sudo apt install -y git python-launchpadlib
        - ./tools/cla_check.py

    - stage: spread
      if: type != cron
      script:
      - cp "$TRAVIS_BUILD_DIR/snaps-cache/snapcraft-pr$TRAVIS_PULL_REQUEST.snap" .
      - ./runtests.sh spread

    # Trigger nightly tests, only in cron.
    - stage: nightly
    # Run spread tests for the snapcraft snap in edge.
      if: type = cron
      script: ./runtests.sh old-spread
