# Ubuntu kernel snapcraft build script
# Generated by snapcraft ubuntu-kernel plugin.
# ----
# Build on:  {{ craft_arch_build_on }}
# Build for: {{ craft_arch_build_for }}
# Snapcraft version: {{ snap_version }}
# Snap data: {{ snap_data_path }}
# Snap context: {{ snap_context }}
# ----
env

# Cleanup build arena. Rebuilding without a `snapcraft clean` leaves state
# behind, which slows down incremental builds significantly during development.
cd {{ craft_part_build_dir }}
rm -fr {{ craft_part_build_dir }}/kernel/
rm -fr {{ craft_part_build_dir }}/unpacked-*
rm -fr {{ craft_part_install_dir }}/*

mkdir {{ craft_part_build_dir }}/kernel
# Get source deb packages into build arena
{% if ubuntu_kernel_use_binary_package %}
    rsync -aH {{ craft_part_src_dir }}/*.deb {{ craft_part_build_dir }}/kernel
{% else %}
    {% include "kernel/ubuntu_kernel_build_kernel_debs.sh.inc.j2" %}
    mv {{ craft_part_build_dir }}/*.deb {{ craft_part_build_dir}}/kernel
{% endif %}


cd {{ craft_part_build_dir }}/kernel

{% if ubuntu_kernel_use_binary_package %}
    dpkg-deb -R linux-image-{{ pkgfile_version_flavour }}.deb unpacked-linux-image
{% else %}
    # Source builds are not signed yet
    dpkg-deb -R linux-image-unsigned-{{ pkgfile_version_flavour }}.deb unpacked-linux-image
{% endif %}

dpkg-deb -x linux-modules-{{ pkgfile_version_flavour }}.deb unpacked-linux-modules

dpkg-deb -x linux-modules-extra-{{ pkgfile_version_flavour }}.deb unpacked-linux-modules


# Unpack the linux deb binaries to snap package structure
mv unpacked-linux-image/* {{ craft_part_install_dir }}
mkdir {{ craft_part_install_dir }}/lib
mv unpacked-linux-modules/lib/modules {{ craft_part_install_dir }}/lib/
mv unpacked-linux-modules/boot/* {{ craft_part_install_dir }}/boot/

depmod -b {{ craft_part_install_dir }} {{ kernel_abi }}-{{ ubuntu_kernel_flavour }}

# Manipulate stock kernel layout to the snapcraft package layout.
mv {{ craft_part_install_dir }}/boot/* {{ craft_part_install_dir }}/
ln -f {{ craft_part_install_dir }}/vmlinuz-{{ kernel_abi }}-{{ ubuntu_kernel_flavour }} {{ craft_part_install_dir }}/kernel.img
mv {{ craft_part_install_dir }}/lib/modules {{ craft_part_install_dir }}/

# Device tree
DTBS=unpacked-linux-firmware/lib/firmware/{{ kernel_abi }}/device-tree
[ -d "${DTBS}" ] && mv "${DTBS}" {{ craft_part_install_dir }}/dtbs

# Firmware
FIRMWARE=unpacked-linux-firmware/lib/firmware/{{ kernel_abi }}
[ -d "${FIRMWARE}" ] && mv "${FIRMWARE}" {{ craft_part_install_dir }}/firmware
rm -rf {{ craft_part_install_dir }}/boot
