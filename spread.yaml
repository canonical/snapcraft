project: snapcraft

environment:
  # FIXME: This variable is only used by the spread_tests/ suite.
  SNAPCRAFT_FROM_SNAP: "1"

  # This variable can be set to either "deb" or "snap". It defaults to "snap".
  SNAPCRAFT_PACKAGE_TYPE: "$(HOST: echo ${SNAPCRAFT_PACKAGE_TYPE:-snap})"

  # If SNAPCRAFT_PACKAGE_TYPE is "snap" and this variable is defined, spread
  # will install snapcraft from that channel. Otherwise, it'll look for a snap
  # in the source tree. If SNAPCRAFT_PACKAGE_TYPE is "deb" this variable does
  # nothing.
  SNAPCRAFT_CHANNEL: "$(HOST: echo ${SNAPCRAFT_CHANNEL})"

  # Show error tracebacks
  SNAPCRAFT_MANAGED_HOST: "yes"

  # Disable all Sentry error reporting
  SNAPCRAFT_ENABLE_ERROR_REPORTING: "no"

  SETUP_DIR: /snapcraft/tests/spread/setup

backends:
  lxd:
    systems:
      - ubuntu-16.04
      - ubuntu-18.04
  linode:
    key: "$(HOST: echo $SPREAD_LINODE_KEY)"
    systems:
      - ubuntu-16.04-64:
          kernel: GRUB 2
          workers: 3
  google:
    key: "$(HOST: echo $SPREAD_GOOGLE_KEY)"
    location: computeengine/us-east1-b
    systems:
      - ubuntu-14.04-64:
          workers: 3
      - ubuntu-16.04-64:
          workers: 3
      - ubuntu-18.04-64:
          workers: 3
  autopkgtest:
    type: adhoc
    allocate: |
      echo "Allocating ad-hoc $SPREAD_SYSTEM"
      if [ -z "${ADT_ARTIFACTS}" ]; then
        FATAL "adhoc only works inside autopkgtest"
        exit 1
      fi
      echo 'ubuntu ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/99-spread-users
      ADDRESS localhost:22
    discard: echo "Discarding ad-hoc $SPREAD_SYSTEM"
    systems:
      # No Trusty systems since the deb doesn't exist there
      # Xenial
      - ubuntu-16.04-amd64:
          username: ubuntu
          password: ubuntu
      - ubuntu-16.04-i386:
          username: ubuntu
          password: ubuntu
      - ubuntu-16.04-ppc64el:
          username: ubuntu
          password: ubuntu
      - ubuntu-16.04-armhf:
          username: ubuntu
          password: ubuntu
      - ubuntu-16.04-s390x:
          username: ubuntu
          password: ubuntu
      - ubuntu-16.04-arm64:
          username: ubuntu
          password: ubuntu
      # Artful
      - ubuntu-17.10-amd64:
          username: ubuntu
          password: ubuntu
      - ubuntu-17.10-i386:
          username: ubuntu
          password: ubuntu
      - ubuntu-17.10-ppc64el:
          username: ubuntu
          password: ubuntu
      - ubuntu-17.10-armhf:
          username: ubuntu
          password: ubuntu
      - ubuntu-17.10-s390x:
          username: ubuntu
          password: ubuntu
      # Bionic
      - ubuntu-18.04-amd64:
          username: ubuntu
          password: ubuntu
      - ubuntu-18.04-i386:
          username: ubuntu
          password: ubuntu
      - ubuntu-18.04-ppc64el:
          username: ubuntu
          password: ubuntu
      - ubuntu-18.04-armhf:
          username: ubuntu
          password: ubuntu
      - ubuntu-18.04-s390x:
          username: ubuntu
          password: ubuntu
      - ubuntu-18.04-arm64:
          username: ubuntu
          password: ubuntu
      # Cosmic
      - ubuntu-18.10-amd64:
          username: ubuntu
          password: ubuntu
      - ubuntu-18.10-i386:
          username: ubuntu
          password: ubuntu
      - ubuntu-18.10-ppc64el:
          username: ubuntu
          password: ubuntu
      - ubuntu-18.10-armhf:
          username: ubuntu
          password: ubuntu
      - ubuntu-18.10-s390x:
          username: ubuntu
          password: ubuntu
      - ubuntu-18.10-arm64:
          username: ubuntu
          password: ubuntu

exclude: [snaps-cache/]

prepare: |
  # This unfortunately cannot be extracted into a standalone script since this
  # portion of of YAML runs before the source code has been fetched.

  # 'apt update' is hanging on security.ubuntu.com with IPv6. Prefer IPv4 over
  # IPv6
  cat <<EOF > gai.conf
  precedence  ::1/128       50
  precedence  ::/0          40
  precedence  2002::/16     30
  precedence ::/96          20
  precedence ::ffff:0:0/96 100
  EOF
  if ! mv gai.conf /etc/gai.conf; then
      echo "/etc/gai.conf is not writable, ubuntu-core system? apt update won't"
      echo "be affected in that case"
      rm -f gai.conf
  fi

  # Now run 'apt update', but don't show output unless it fails. The logs are
  # long enough as it is.
  tempfile="$(mktemp)"
  if ! apt update > "$tempfile" 2>&1; then
      cat "$tempfile"
      exit 1
  fi

  apt install -y snapd

  if [ "$SNAPCRAFT_PACKAGE_TYPE" = "deb" ]; then
      apt install -y snapcraft
  elif [ "$SNAPCRAFT_PACKAGE_TYPE" = "snap" ]; then
      # If $SNAPCRAFT_CHANNEL is defined, install snapcraft from that channel.
      # Otherwise, look for it in /snapcraft/.
      if [ -z "$SNAPCRAFT_CHANNEL" ]; then
          if stat /snapcraft/*.snap 2>/dev/null; then
              snap install --classic --dangerous /snapcraft/*.snap
          else
              echo "Expected a snap to exist in /snapcraft/. If your intention"\
                   "was to install from the store, set \$SNAPCRAFT_CHANNEL."
              exit 1
          fi
      else
          snap install --classic snapcraft --channel="$SNAPCRAFT_CHANNEL"
      fi
  else
    echo "'$SNAPCRAFT_PACKAGE_TYPE' is not a supported snapcraft package type."\
         " Supported types are 'deb' and 'snap'."
    exit 1
  fi

restore: $SETUP_DIR/restore.sh

suites:
 # General, core suite
 tests/spread/general/:
   summary: tests of snapcraft core functionality

 # Plugin-specific suites
 tests/spread/plugins/ament/:
   summary: tests of snapcraft's Ament plugin
   kill-timeout: 360m
 tests/spread/plugins/autotools/:
   summary: tests of snapcraft's Autotools plugin
 tests/spread/plugins/catkin/:
   summary: tests of snapcraft's Catkin plugin
   kill-timeout: 180m
 tests/spread/plugins/copy/:
   summary: tests of snapcraft's Copy plugin
 tests/spread/plugins/cmake/:
   summary: tests of snapcraft's CMake plugin
 tests/spread/plugins/go/:
   summary: tests of snapcraft's Go plugin
 tests/spread/plugins/godeps/:
   summary: tests of snapcraft's Godeps plugin
 tests/spread/plugins/kbuild/:
   summary: tests of snapcraft's Kbuild plugin
 tests/spread/plugins/meson/:
   summary: tests of snapcraft's Meson plugin
 tests/spread/plugins/nil/:
   summary: tests of snapcraft's Nil plugin
 tests/spread/plugins/ruby/:
   summary: tests of snapcraft's Ruby plugin
   kill-timeout: 180m
 tests/spread/plugins/scons/:
   summary: tests of snapcraft's SCons plugin
 tests/spread/plugins/tar-content/:
   summary: tests of snapcraft's tar-content plugin
 tests/spread/plugins/waf/:
   summary: tests of snapcraft's Waf plugin

path: /snapcraft/
