summary: Test the remote builder for core22
manual: true
kill-timeout: 180m

environment:
  LAUNCHPAD_TOKEN: "$(HOST: echo ${LAUNCHPAD_TOKEN})"
  SNAP: no-archs
  SNAP/all: all
  SNAP/no_archs: no-archs
  SNAP/archs: archs
  SNAP/build_for: build-for
  SNAP/build_for_with_archs: build-for-with-archs
  SNAPCRAFT_REMOTE_BUILD_STRATEGY: disable-fallback
  CREDENTIALS_FILE: "$HOME/.local/share/snapcraft/launchpad-credentials"
  CREDENTIALS_FILE/new_credentials: "$HOME/.local/share/snapcraft/launchpad-credentials"
  CREDENTIALS_FILE/old_credentials: "$HOME/.local/share/snapcraft/provider/launchpad/credentials"

prepare: |
  cd "./snaps/$SNAP"

  if [[ -z "$LAUNCHPAD_TOKEN" ]]; then
    echo "No credentials set in env LAUNCHPAD_TOKEN"
    exit 1
  fi

  # commit the project
  git config --global --add safe.directory "$PWD"
  git init
  git add snapcraft.yaml
  git commit -m "Initial Commit"

  # set up launchpad token
  mkdir -p "$(dirname "$CREDENTIALS_FILE")"
  echo -e "$LAUNCHPAD_TOKEN" > "$CREDENTIALS_FILE"

  # build ids are based on the project contents
  # adding a date ensures each test has a unique build id
  date > date.txt

restore: |
  cd "./snaps/$SNAP"

  # remove snaps, logs, and date files
  rm -f ./*.snap ./snapcraft-*.txt ./date.txt

  # remove the temporary git repository
  rm -rf .git

execute: |
  cd "./snaps/$SNAP"

  call_args=""
  if [[ -e "arguments.txt" ]]; then
    call_args=$(cat "arguments.txt")
  fi
  
  # shellcheck disable=SC2086
  snapcraft remote-build --launchpad-accept-public-upload $call_args

  find . -maxdepth 1 -name "*.snap" | MATCH ".snap"

  # confirm the snaps with the expected architectures were built
  while read -r expected_snap; do
    if [[ ! -e $expected_snap ]]; then
      echo "Could not find snap '$expected_snap'"
      exit 1
    fi
  done < "expected-snaps.txt"

  # confirm no other snaps were built
  expected_number_of_snaps=$(wc -l < "expected-snaps.txt")
  actual_number_of_snaps=$(find . -wholename "./*.snap" | wc -l)
  if [[ $expected_number_of_snaps -ne $actual_number_of_snaps ]]; then
    echo "Expected $expected_number_of_snaps to be built, but $actual_number_of_snaps were built."
    exit 1
  fi
