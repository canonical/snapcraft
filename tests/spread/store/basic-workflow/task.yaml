summary: create a snap with 2 revisions in the staging store for use with validation sets

environment:
  SNAP: "/snapcraft/tests/spread/core24/simple-snap/snap/"
  SNAPCRAFT_STORE_CREDENTIALS/candid: "$(HOST: echo ${SNAPCRAFT_STORE_CREDENTIALS_STAGING_CANDID})"

execute: |
  snap info test-snapcraft-assertions
#prepare: |
#  unset SNAPCRAFT_BUILD_ENVIRONMENT
#  if [[ -z "$SNAPCRAFT_STORE_CREDENTIALS" ]]; then
#    echo "No credentials set in env SNAPCRAFT_STORE_CREDENTIALS"
#    exit 1
#  fi
#
#  # Install the review tools to make sure we do not break anything
#  # assumed in there.
#  # TODO: requires running inside $HOME.
#  # snap install review-tools
#
#  #shellcheck source=tests/spread/tools/snapcraft-yaml.sh
#  . "$TOOLS_DIR/snapcraft-yaml.sh"
#
#  # Do not change the test-snapcraft- prefix. Ensure that you
#  # notify the store team if you need to use a different value when
#  # working with the production store.     
#  name="test-snapcraft-assertions"
#  set_name "$SNAP/snapcraft.yaml" "${name}"
#  set_grade "$SNAP/snapcraft.yaml" stable
#
#  # Build what we have and verify the snap runs as expected.
#  cd "$SNAP"
#  snapcraft
#
#restore: |
#  cd "$SNAP"
#  snapcraft clean
#  rm -f ./*.snap ./*.comp
#
#  snap refresh snapd --stable
#
#  #shellcheck source=tests/spread/tools/snapcraft-yaml.sh
#  . "$TOOLS_DIR/snapcraft-yaml.sh"
#  restore_yaml "snapcraft.yaml"
#
#execute: |
#  unset SNAPCRAFT_BUILD_ENVIRONMENT
#  # Get information about our snap.
#  cd "$SNAP"
#  snap_file=$(ls ./*.snap)
#  snap_name=$(grep "name: " snapcraft.yaml | sed -e "s/name: \(.*$\)/\1/")
#
#  # Login mechanism
#  export SNAPCRAFT_STORE_AUTH="${SPREAD_VARIANT}"
#
#  # Who Am I?
#  snapcraft whoami
#
#  # Register
#  snapcraft register --yes "${snap_name}"
#
#  # Take a look at registered snaps.
#  snapcraft list
#
#  # Push and Release
#  snapcraft upload "${snap_file}" --release edge
#
#  # Show revisions
#  snapcraft list-revisions "${snap_name}"
#
#  # Status
#  snapcraft status "${snap_name}"
#  
#  # List tracks
#  snapcraft list-tracks "${snap_name}"
#
#  # remove old version
#  rm -f ./*.snap
#
#  # rebuild another version to upload
#  sed -i 's/version.*/version: "2.0"/g' snapcraft.yaml
#  snapcraft
#  snap_file=$(ls ./*.snap)
#  snap_name=$(grep "name: " snapcraft.yaml | sed -e "s/name: \(.*$\)/\1/")
#
#  # Push and Release
#  snapcraft upload "${snap_file}" --release candidate
#
#  # Show revisions
#  snapcraft list-revisions "${snap_name}"
#
#  # Status
#  snapcraft status "${snap_name}"
#  
#  # List tracks
#  snapcraft list-tracks "${snap_name}"
#
#  # show what happened for debugging
#  exit 1
