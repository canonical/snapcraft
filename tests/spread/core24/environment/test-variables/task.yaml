summary: Test scriptlets variables on core24

environment:
  SNAP/test_variables: test-variables

prepare: |
  #shellcheck source=tests/spread/tools/snapcraft-yaml.sh
  . "$TOOLS_DIR/snapcraft-yaml.sh"
  # set_base "../snaps/$SNAP/snap/snapcraft.yaml"

restore: |
  cd "../snaps/$SNAP"
  rm -f ./*.snap
  rm -Rf work

  #shellcheck source=tests/spread/tools/snapcraft-yaml.sh
  . "$TOOLS_DIR/snapcraft-yaml.sh"
  restore_yaml "snap/snapcraft.yaml"

execute: |
  cd "../snaps/$SNAP"

  check_vars() {
    file="$1"
    root="/snapcraft/tests/spread/core24/environment/snaps/test-variables"
    echo "==== $file ===="
    cat "$file"
    for exp in \
      "^CRAFT_ARCH_TRIPLET=x86_64-linux-gnu$" \
      "^CRAFT_TARGET_ARCH=amd64$" \
      "^CRAFT_PARALLEL_BUILD_COUNT=[0-9]\+$" \
      "^CRAFT_PROJECT_DIR=${root}$" \
      "^CRAFT_PART_NAME=hello$" \
      "^CRAFT_PART_SRC=${root}/parts/hello/src$" \
      "^CRAFT_PART_SRC_WORK=${root}/parts/hello/src$" \
      "^CRAFT_PART_BUILD=${root}/parts/hello/build$" \
      "^CRAFT_PART_BUILD_WORK=${root}/parts/hello/build$" \
      "^CRAFT_PART_INSTALL=${root}/parts/hello/install$" \
      "^CRAFT_STAGE=${root}/stage$" \
      "^CRAFT_PRIME=${root}/prime$"; do
      grep -q "$exp" < "$file"
    done
  }
  
  # If this next line fails, delete it and replace it with the one following it
  snapcraft pull 2>&1 | MATCH '"pull" command is not implemented for core24!'; exit 0
  # snapcraft pull
  check_vars pull.txt

  snapcraft build
  check_vars build.txt

  snapcraft stage
  check_vars stage.txt

  snapcraft prime
  check_vars prime.txt
