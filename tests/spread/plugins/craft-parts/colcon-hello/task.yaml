summary: >-
  Build, clean, build, modify and rebuild, and run hello for the colcon plugin.
manual: true

environment:
  SNAP/colcon_ros2_humble: colcon-ros2-humble-hello
  SNAP/colcon_ros2_wrapper: colcon-ros2-wrapper

prepare: |
  #shellcheck source=tests/spread/tools/snapcraft-yaml.sh
  . "$TOOLS_DIR/snapcraft-yaml.sh"
  set_base "${SNAP}/snap/snapcraft.yaml"

  #shellcheck source=tests/spread/tools/package-utils.sh
  . "$TOOLS_DIR/package-utils.sh"
  create_dpkg_restore_point

restore: |
  cd "${SNAP}"
  snapcraft clean
  rm -f ./*.snap

  # Undo changes to hello
  [ -f src/hello.cpp ] && git checkout src/hello.cpp

  #shellcheck source=tests/spread/tools/snapcraft-yaml.sh
  . "$TOOLS_DIR/snapcraft-yaml.sh"
  restore_yaml "snap/snapcraft.yaml"

  #shellcheck source=tests/spread/tools/package-utils.sh
  . "$TOOLS_DIR/package-utils.sh"
  dpkg_restore_point

execute: |
  cd "${SNAP}"

  # Make sure expand-extensions works
  snapcraft expand-extensions

  # Build what we have and verify the snap runs as expected.
  snapcraft
  snap install "${SNAP}"_1.0_*.snap --dangerous

  [ "$($SNAP)" = "hello world" ]

  # Clean the hello part, then build and run again.
  snapcraft clean hello
  snapcraft
  snap install "${SNAP}"_1.0_*.snap --dangerous

  [ "$($SNAP)" = "hello world" ]

  # Make sure that what we built runs with the changes applied.
  modified_file=src/hello.cpp

  sed -i "${modified_file}" -e 's/hello world/hello rebuilt world/'

  snapcraft
  snap install "${SNAP}"_1.0_*.snap --dangerous

  [ "$($SNAP)" = "hello rebuilt world" ]
