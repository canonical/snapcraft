summary: Ensure that the catkin plugin can recursively use rosinstall
warn-timeout: 9m  # Keep less than 10 minutes so Travis can't timeout
priority: 100  # Run this test early so we're not waiting for it

environment:
  SNAP_DIR: ../snaps/catkin-recursive-rosinstall

prepare: |
  #shellcheck source=tests/spread/tools/snapcraft-yaml.sh
  . "$TOOLS_DIR/snapcraft-yaml.sh"
  set_base "$SNAP_DIR/snap/snapcraft.yaml"

restore: |
  cd "$SNAP_DIR"
  snapcraft clean
  rm -f ./*.snap

  #shellcheck source=tests/spread/tools/snapcraft-yaml.sh
  . "$TOOLS_DIR/snapcraft-yaml.sh"
  restore_yaml "snap/snapcraft.yaml"

execute: |
  cd "$SNAP_DIR"

  # Unpack the git repos for the test
  tar xf repos.tar

  # Pull should have no errors
  snapcraft pull

  # Verify that all components were properly (recursively) pulled
  repo_path="parts/catkin-part/src/src/repo1"
  [ -f "$repo_path/repo1.rosinstall" ]
  [ -f "$repo_path/file1" ]
  [ "$(cat $repo_path/file1)" = "1" ]

  repo_path="parts/catkin-part/src/src/repo2"
  [ -f "$repo_path/repo2.rosinstall" ]
  [ -f "$repo_path/file2" ]
  [ "$(cat $repo_path/file2)" = "2" ]

  repo_path="parts/catkin-part/src/src/repo3"
  [ -f "$repo_path/file3" ]
  [ "$(cat $repo_path/file3)" = "3" ]
