summary: Build a strict snap and validate elf patching

# TODO patchelf'ing not supported in 22.04
systems:
  - -ubuntu-22.04
  - -ubuntu-22.04-64
  - -ubuntu-22.04-amd64
  - -ubuntu-22.04-arm64
  - -ubuntu-22.04-armhf
  - -ubuntu-22.04-s390x
  - -ubuntu-22.04-ppc64el

environment:
  SNAP_DIR: ../snaps/strict-patchelf

prepare: |
  #shellcheck source=tests/spread/tools/snapcraft-yaml.sh
  . "$TOOLS_DIR/snapcraft-yaml.sh"
  set_base "$SNAP_DIR/snap/snapcraft.yaml"

  apt-get install patchelf dpkg-dev -y
  apt-mark auto patchelf dpkg-dev
restore: |
  cd "$SNAP_DIR"
  snapcraft clean
  rm -f ./*.snap

  #shellcheck source=tests/spread/tools/snapcraft-yaml.sh
  . "$TOOLS_DIR/snapcraft-yaml.sh"
  restore_yaml "snap/snapcraft.yaml"

execute: |
  #shellcheck source=tests/spread/tools/snapcraft-yaml.sh
  . "$TOOLS_DIR/snapcraft-yaml.sh"
  base="$(get_base)"

  cd "$SNAP_DIR"
  cat snap/snapcraft.yaml
  snapcraft prime

  arch_triplet="$(dpkg-architecture -q DEB_HOST_MULTIARCH)"

  # Verify typical strict binary has an untouched rpath
  patchelf --print-interpreter prime/bin/hello-strict | MATCH "^/lib.*ld.*.so.*"
  rpath="$(patchelf --print-rpath prime/bin/hello-strict)"
  if [[ -n "${rpath}" ]]; then
     echo "found rpath on strict binary: ${rpath}"
     exit 1
  fi

  # Account for /usr merge.
  if [ "$SPREAD_SYSTEM" = "ubuntu-20.04-64" ]; then
    RPATH_MATCH="^/snap/$base/current/lib/$arch_triplet"
    RPATH_ORIGIN_MATCH="^\\\$ORIGIN/../fake-lib:/snap/$base/current/lib/$arch_triplet"
  else
    RPATH_MATCH="^/snap/$base/current/lib/$arch_triplet:/snap/$base/current/usr/lib/$arch_triplet"
    RPATH_ORIGIN_MATCH="^\\\$ORIGIN/../fake-lib:/snap/$base/current/lib/$arch_triplet:/snap/$base/current/usr/lib/$arch_triplet"
  fi

  # Verify binary rpath patching with existing rpath
  patchelf --print-interpreter prime/bin/hello-strict-existing-rpath | MATCH "^/snap/$base/current/lib.*ld.*.so.*"
  patchelf --print-rpath prime/bin/hello-strict-existing-rpath | MATCH "${RPATH_ORIGIN_MATCH}"

  # Verify binary rpath patching without existing rpath
  patchelf --print-interpreter prime/bin/hello-strict-enable-patchelf | MATCH "^/snap/$base/current/lib.*ld.*.so.*"
  patchelf --print-rpath prime/bin/hello-strict-enable-patchelf | MATCH "${RPATH_MATCH}"

