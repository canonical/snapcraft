name: snapcraft
base: core22
summary: easily create snaps
description: |
    Snapcraft aims to make upstream developers' lives easier and as such is not
    a single toolset, but instead is a collection of tools that enable the
    natural workflow of an upstream to be extended with a simple release step
    into Snappy.
adopt-info: snapcraft
confinement: classic
license: GPL-3.0
assumes:
  - snapd2.43

# https://github.com/snapcore/snapcraft/issues/4187
environment:
  PATH: "$SNAP/libexec/snapcraft:/snap/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  LD_LIBRARY_PATH: "$SNAP/none"

apps:
  snapcraft:
    environment:
      # https://github.com/lxc/pylxd/pull/361
      PYLXD_WARNINGS: "none"
    command: bin/python $SNAP/bin/snapcraft
    completer: snapcraft-completion

build-packages:
  - cargo
  - build-essential
  - intltool
  - libapt-pkg-dev
  - libffi-dev
  - libssl-dev
  - libsodium-dev
  - liblzma-dev
  - libxml2-dev
  - libxslt1-dev
  - libyaml-dev
  - patch
  - pkg-config
  - python3-dev
  - rustc
  - sed

parts:
  bash-completion:
    source: debian
    plugin: dump
    stage:
      - snapcraft-completion

  patchelf:
    plugin: autotools
    source: https://github.com/snapcore/patchelf
    source-type: git
    source-branch: '0.9+snapcraft'
    autotools-configure-parameters:
      - --prefix=/
    build-attributes:
      - enable-patchelf
    build-packages:
      - g++
      - git
      - make
    override-pull: |
      ${SNAP}/libexec/snapcraft/craftctl default

      if [ "${CRAFT_TARGET_ARCH}" = "riscv64" ]; then
        git am "${CRAFT_PROJECT_DIR}/snap/local/patches/patchelf/0001-Always-use-the-ET_DYN-codepath-avoiding-shifting-loa.patch"
        git am "${CRAFT_PROJECT_DIR}/snap/local/patches/patchelf/0002-Fix-rewriteSectionsLibrary-to-not-assume-the-base-ad.patch"
      fi
    override-build: |
      ${SNAP}/libexec/snapcraft/craftctl default
      make check
    prime:
      - bin/patchelf

  snapcraft-libs:
    plugin: nil
    stage-packages:
        - apt
        - apt-transport-https
        - apt-utils
        - binutils
        - execstack
        - gpg
        - gpgv
        - libffi7
        - libsodium23
        - libxml2
        - libxslt1.1
        - libpython3-stdlib
        - libpython3.10-stdlib
        - libpython3.10-minimal
        - python3-pip
        - python3-setuptools
        - python3-wheel
        - python3-venv
        - python3-minimal
        - python3-distutils
        - python3-pkg-resources
        - python3.10-minimal
        - squashfs-tools
        - xdelta3
    build-attributes:
      - enable-patchelf
    override-build: |
      ${SNAP}/libexec/snapcraft/craftctl default

      echo "Create libsodium symlink..."
      TRIPLET_PATH="$SNAPCRAFT_PART_INSTALL/usr/lib/$(gcc -print-multiarch)"
      LIBSODIUM="$(readlink -n "$TRIPLET_PATH/libsodium.so.23")"
      # Remove so the link can be recreated on re-builds
      rm -f "$TRIPLET_PATH/libsodium.so"
      ln -s "$LIBSODIUM" "$TRIPLET_PATH/libsodium.so"

      # Restore patched files
      PYTHON_PACKAGE_PATH="${SNAPCRAFT_PART_INSTALL}/usr/lib/python3.10/"
      CTYPES_INIT="ctypes/__init__.py"
      CTYPES_INIT_ORIG="patched/${CTYPES_INIT}.orig"
      [ -f "${CTYPES_INIT_ORIG}" ] && mv "${CTYPES_INIT_ORIG}" "${PYTHON_PACKAGE_PATH}/${CTYPES_INIT}"

      # Apply patches
      echo "Patching ctypes..."
      patch -s -b "${PYTHON_PACKAGE_PATH}/${CTYPES_INIT}" "${SNAPCRAFT_PROJECT_DIR}/snap/local/patches/python/ctypes_init.diff"

      # Save patches to allow rebuilding
      mkdir -p patched/ctypes
      if [ -f "${PYTHON_PACKAGE_PATH}/${CTYPES_INIT}.orig" ]; then
        mv "${PYTHON_PACKAGE_PATH}/${CTYPES_INIT}.orig" patched/ctypes
      fi

      # Disable site packages
      sed -i "${SNAPCRAFT_PART_INSTALL}/usr/lib/python3.10/site.py" \
        -e 's/^ENABLE_USER_SITE = None$/ENABLE_USER_SITE = False/'

  libgit2:
    source: https://github.com/libgit2/libgit2/archive/refs/tags/v1.7.1.tar.gz
    source-checksum: sha256/17d2b292f21be3892b704dddff29327b3564f96099a1c53b00edc23160c71327
    plugin: cmake
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
    build-attributes:
      - enable-patchelf
    prime:
      - -usr/include
  snapcraft:
    source: .
    plugin: python
    python-packages:
        - wheel
        - pip
        # Limited to < 66 because we need `pkg_resources` and because `python-apt`
        # does not build with the latest.
        - setuptools<66
    python-constraints:
        - constraints.txt
    python-requirements:
        - requirements.txt
    organize:
        # Put snapcraftctl and craftctl into its own directory that can be included in the PATH
        # without including other binaries.
        bin/craftctl: libexec/snapcraft/craftctl
        bin/snapcraftctl: bin/scriptlet-bin/snapcraftctl
        # Also install the compatibility wrapper for core22+.
        bin/snapcraftctl-compat: libexec/snapcraft/snapcraftctl
    build-attributes:
      - enable-patchelf
    build-environment:
        # Build PyNaCl from source since the wheel files interact
        # strangely with classic snaps. Well, build it all from source.
        - "PIP_NO_BINARY": ":all"
        # Use base image's libsodium for PyNaCl.
        - "SODIUM_INSTALL": "system"
        - "CFLAGS": "$(pkg-config python-3.10 yaml-0.1 --cflags)"
    override-build: |
        ${SNAP}/libexec/snapcraft/craftctl default

        version="$(python3 setup.py --version)"
        ${SNAP}/libexec/snapcraft/craftctl set version="$version"

        [ -n "$(echo $version | grep "+git")" ] && grade=devel || grade=stable
        sed -i -e '1 s|^#!/.*|#!/snap/snapcraft/current/bin/python -E|' $SNAPCRAFT_PART_INSTALL/bin/craftctl
        ${SNAP}/libexec/snapcraft/craftctl set grade="$grade"

        # The new implementation still requires this.
        ln -sf ../usr/bin/python3.10 $SNAPCRAFT_PART_INSTALL/bin/python3
    after: [snapcraft-libs, libgit2]

  chisel:
    plugin: go
    source: https://github.com/canonical/chisel.git
    source-commit: bd27f8700cd7d2a6b4e0df6b10c3761c83a70485
    build-snaps:
      - go/1.18/stable
    organize:
      bin/chisel: libexec/snapcraft/chisel
