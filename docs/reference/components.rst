Components
==========

.. include:: /reuse/components-intro.rst

Like snaps, components are packaged a squashfs file. When installed, the
component is mounted under ``$SNAP/../components/$SNAP_REVISION/`` so
the host snap can access it.

Types
-----

A component can have a type for certain purposes. For some component types,
Snapcraft may place requirements on the contents of a component and snapd
may have special handling for the component.

Standard
~~~~~~~~

This is the general use type for components. It should be used when no
specific type applies. Snapcraft has no requirements or special handling for
this type.

Kernel-modules
~~~~~~~~~~~~~~

This type may only be used for :ref:`kernel snaps<kernel-snap-reference>`.
These components are for kernel modules and firmware that are made available to
the system after installation. This allows the kernel to find firmware and for
users to load kernel modules with ``modprobe``.

Static modules should be organized under ``modules/<kernel-version>/`` in the
component, where ``<kernel-version>`` is the version reported by ``uname -r``.

Firmware should be organized under ``firmware/`` in the component.

Modules and firmware may be dynamically generated by the component's
``install`` or ``refresh`` hooks. These modules and firmware should be placed
in ``$SNAP_DATA/modules/<kernel-version>/`` and ``$SNAP_DATA/firmware/``
respectively. Additionally, the snap's ``meta/kernel.yaml`` file must specify
``dynamic-modules: $SNAP_DATA``.

.. include:: /common/craft-parts/reference/partition_specific_output_directory_variables.rst
