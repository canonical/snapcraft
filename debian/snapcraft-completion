list_snapcraft_parts() {
    # first get intend
    #  find first line after 'parts:.*' ignoring comments and empty lines
    #  this is first part name, determine used indent from it
    local indent=$(sed 's/\(.*\)#.*/\1/ ; /^[[:space:]]*$/d' ${1} | sed -n '/parts:.*/{n;p}' | sed 's/\([[:space:]]\+\).*/\1/')
    # parse file in stages
    #Â  print all line after 'parts:.*' ignoring comments and empty lines
    #  stop at first line not starting with white space
    #  only print lines starting with indent followed by non white space
    sed 's/\(.*\)#.*/\1/ ; /^[[:space:]]*$/d ; 1,/parts:.*/d' ${1} | \
        sed -n '/^[^[:space:]]/q;p' | \
        sed -e 's/'"${indent}"'\(.*\):/\1/ ; /^[[:space:]]/d'
}

_snapcraft()
{
    local cur prev opts
    _init_completion -s || return

    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    opts="help init list-plugins plugins login logout export-login list-keys keys create-key register-key register registered list-registered push release clean cleanbuild pull build sign-build stage prime pack update define search gated validate history status close enable-ci expand-extensions extension extensions list-extensions --target-arch --build-for --debug --shell --shell-after ---provider -h --help --verbose"

    case "$prev" in
    help)
        plugins=$(snapcraft list-plugins)
        COMPREPLY=( $(compgen -W "$plugins" -- $cur))
        return 0
        ;;
    pack)
        _filedir -d
        return 0
        ;;
    upload | push | sign-build)
        _filedir 'snap'
        return 0
        ;;
    enable-ci)
        COMREPLY=( travis )
        return 0
        ;;
    --target-arch | --build-for)
        arch_options="arm64 armhf amd64 i386 ppc64el riscv64 s390x"
        COMPREPLY=( $(compgen -W "$arch_options" -- $cur))
        return 0
        ;;
    build | clean | pull | stage | prime)
        # first find snapcraft.yaml
        for sy in snapcraft.yaml snap/snapcraft.yaml build-aux/snapcraft.yaml build-aux/snap/snapcraft.yaml
        do
            if [ -e ${sy} ]; then
                snapcraft_yaml="${sy}"
                break
            fi
        done
        if [ -n "${snapcraft_yaml}" ]; then
            parts_options=$(list_snapcraft_parts ${snapcraft_yaml})
            COMPREPLY=( $(compgen -W "$parts_options" -- $cur))
        fi
        return 0
        ;;
    *)
        ;;
    esac

    COMPREPLY=( $(compgen -W "$opts" -- $cur) )
    return 0
}
complete -F _snapcraft snapcraft
