name: Tox
on:
  push:
    branches:
      - "main"
      - "snapcraft/7.0"
      - "release/*"
      - "hotfix/*"
  pull_request:

jobs:
  linters:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y libapt-pkg-dev libyaml-dev xdelta3
          sudo snap install --classic pyright
          sudo snap install shellcheck
          python -m pip install 'tox>=4.0.11<5.0' tox-gh
      - name: Setup test suite
        run: tox run-parallel --parallel all --parallel-no-spinner -m lint --notest
      - name: Lint with Tox
        run: tox run-parallel --parallel all -m lint --skip-pkg-install --result-json tox-lint.json
      - name: Upload Linting results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: tox-lint.json
          path: tox-lint.json
  tests:
    strategy:
      fail-fast: false  # Run all the tests to their conclusions.
      matrix:
        platform: [ubuntu-20.04, ubuntu-22.04]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python versions on ${{ matrix.platform }}
        uses: actions/setup-python@v4
        with:
          python-version: |
            3.8
            3.10
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libapt-pkg-dev libyaml-dev xdelta3
          python -m pip install 'tox>=4.0.11<5.0' tox-gh
          mkdir -p results
      - name: Setup Tox environments
        run: tox run-parallel --parallel auto --parallel-no-spinner --parallel-live -m ci --notest
      - name: Test with tox
        run: tox run-parallel --parallel all --parallel-live --parallel-no-spinner --result-json results/tox-${{ matrix.platform }}.json -m ci --skip-pkg-install -- --no-header --quiet -rN
      - name: Upload code coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./results/
          files: coverage*.xml
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.platform }}
          path: results/
