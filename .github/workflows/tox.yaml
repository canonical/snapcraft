name: Tox
on:
  push:
    branches:
      - "main"
      - "snapcraft/7.0"
      - "release/*"
      - "hotfix/*"
  pull_request:

jobs:
  linters:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          echo "::group::Begin snap install"
          echo "Installing snaps in the background while running apt and pip..."
          sudo snap install --no-wait --classic pyright --revision 735 # version 1.1.344
          sudo snap install --no-wait shellcheck ruff
          echo "::endgroup::"
          echo "::group::apt-get update"
          sudo apt-get update
          echo "::endgroup::"
          echo "::group::apt-get install..."
          sudo apt-get install --yes libapt-pkg-dev libyaml-dev xdelta3
          echo "::endgroup::"
          echo "::group::pip install"
          python -m pip install 'tox<5.0' tox-gh
          echo "::endgroup::"
          echo "::group::Create virtual environments for linting processes."
          tox run --colored yes -m lint build-docs --notest
          echo "::endgroup::"
          echo "::group::Build docs."
          tox run --colored yes -e build-docs
          echo "::endgroup::"
          echo "::group::Wait for snap to complete"
          snap watch --last=install
          echo "::endgroup::"
      - name: Run Linters
        run: tox run --colored yes --skip-pkg-install -m lint
  tests:
    strategy:
      fail-fast: false  # Run all the tests to their conclusions.
      matrix:
        platform: [ubuntu-22.04]
        python_version: ["3.10"]
        include:
          - python_version: "3.10"
            tox_python: py310
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python version ${{ matrix.python_version }} on ${{ matrix.platform }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install dependencies
        run: |
          echo "::group::apt-get update"
          sudo apt-get update
          echo "::endgroup::"
          echo "::group::apt-get install..."
          sudo apt-get install -y libapt-pkg-dev libyaml-dev xdelta3
          echo "::endgroup::"
          echo "::group::pip install"
          python -m pip install 'tox<5.0' tox-gh
          echo "::endgroup::"
          mkdir -p results
      - name: Setup Tox environments
        run: tox run-parallel --parallel auto --parallel-no-spinner --parallel-live --colored yes -e test-${{ matrix.tox_python }},test-legacy-${{ matrix.tox_python }} --notest
      - name: Test with tox
        run: tox run --skip-pkg-install --result-json results/tox-${{ matrix.platform }}.json --colored yes -e test-${{ matrix.tox_python }},test-legacy-${{ matrix.tox_python }}
      - name: Upload code coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./results/
          files: coverage*.xml
      - name: Upload test results
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.platform }}
          path: results/
